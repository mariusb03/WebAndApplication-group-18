{"ast":null,"code":"import React,{useState}from'react';import'./CartPage.css';import{useCart}from'../../context/CartContext';import CourseModal from'../../components/courseModal/CourseModal';import{useNavigate}from'react-router-dom';import CheckoutModal from\"../../components/CheckoutModal/CheckoutModal\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CartPage=()=>{const{cartItems,clearCart}=useCart();const[selectedCourse,setSelectedCourse]=useState(null);const[showPopup,setShowPopup]=useState(false);const navigate=useNavigate();const handleCheckout=async()=>{const storedUser=JSON.parse(localStorage.getItem('user'));if(!storedUser)return;try{for(const course of cartItems){await fetch(\"http://localhost:8081/api/courses/\".concat(course.courseId,\"/user/\").concat(storedUser.userId),{method:'POST'});}clearCart();setShowPopup(true);}catch(error){console.error('Checkout failed:',error);alert('Checkout failed. Please try again.');}};const totalPrice=cartItems.reduce((sum,item)=>sum+Number(item.price),0);return/*#__PURE__*/_jsxs(\"div\",{className:\"cart-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cart-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Your Cart:\"})}),cartItems.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-cart-message\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Your cart is currently empty\"})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"cart-top-box\",children:cartItems.map(course=>/*#__PURE__*/_jsxs(\"div\",{className:\"course-card\",onClick:()=>setSelectedCourse(course),children:[/*#__PURE__*/_jsx(\"img\",{src:\"/img/\".concat(course.courseId,\".svg\"),alt:\"Course \".concat(course.title),onError:e=>{e.target.src='/img/default.svg';}}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:course.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"tag\",children:[\"Topics: \",course.category]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tag\",children:[\"Price: \",course.price]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tag\",children:[\"Schedule: \",course.session]})]})]},course.courseId))}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-summary-box\",children:[cartItems.map((course,index)=>/*#__PURE__*/_jsxs(\"p\",{children:[course.title,\" : \",course.price]},index)),/*#__PURE__*/_jsxs(\"div\",{className:\"total-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Total price:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"price\",children:[totalPrice.toLocaleString(),\" NOK\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checkout-box\",children:/*#__PURE__*/_jsx(\"button\",{className:\"checkout-button\",onClick:handleCheckout,disabled:cartItems.length===0,children:\"Proceed to Checkout\"})})]})]}),/*#__PURE__*/_jsx(CourseModal,{course:selectedCourse,onClose:()=>setSelectedCourse(null)}),showPopup&&/*#__PURE__*/_jsx(CheckoutModal,{message:\"Thank you for your purchase! The courses have been added to your enrolled courses list in your profile.\",onClose:()=>{setShowPopup(false);navigate('/profile');}})]});};export default CartPage;","map":{"version":3,"names":["React","useState","useCart","CourseModal","useNavigate","CheckoutModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CartPage","cartItems","clearCart","selectedCourse","setSelectedCourse","showPopup","setShowPopup","navigate","handleCheckout","storedUser","JSON","parse","localStorage","getItem","course","fetch","concat","courseId","userId","method","error","console","alert","totalPrice","reduce","sum","item","Number","price","className","children","length","map","onClick","src","alt","title","onError","e","target","category","session","index","toLocaleString","disabled","onClose","message"],"sources":["/Users/mariusbr/Documents/Data ingeniÃ¸r/4. Semester/AppDev&WebTech/gruppe oppgave/WebAndApplication-group-18/src/pages/CartPage/CartPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './CartPage.css';\nimport { useCart } from '../../context/CartContext';\nimport CourseModal from '../../components/courseModal/CourseModal';\nimport { useNavigate } from 'react-router-dom';\nimport CheckoutModal from \"../../components/CheckoutModal/CheckoutModal\";\n\nconst CartPage = () => {\n    const { cartItems, clearCart } = useCart();\n    const [selectedCourse, setSelectedCourse] = useState(null);\n    const [showPopup, setShowPopup] = useState(false);\n    const navigate = useNavigate();\n\n    const handleCheckout = async () => {\n        const storedUser = JSON.parse(localStorage.getItem('user'));\n        if (!storedUser) return;\n\n        try {\n            for (const course of cartItems) {\n                await fetch(`http://localhost:8081/api/courses/${course.courseId}/user/${storedUser.userId}`, {\n                    method: 'POST',\n                });\n            }\n\n            clearCart();\n            setShowPopup(true);\n        } catch (error) {\n            console.error('Checkout failed:', error);\n            alert('Checkout failed. Please try again.');\n        }\n    };\n\n    const totalPrice = cartItems.reduce(\n        (sum, item) => sum + Number(item.price),\n        0\n    );\n\n    return (\n        <div className=\"cart-container\">\n            <div className=\"cart-header\">\n                <h2>Your Cart:</h2>\n            </div>\n\n            {cartItems.length === 0 ? (\n                <div className=\"empty-cart-message\">\n                    <p>Your cart is currently empty</p>\n                </div>\n            ) : (\n                <>\n                    <div className=\"cart-top-box\">\n                        {cartItems.map((course) => (\n                            <div\n                                className=\"course-card\"\n                                key={course.courseId}\n                                onClick={() => setSelectedCourse(course)}\n                            >\n                                <img\n                                    src={`/img/${course.courseId}.svg`}\n                                    alt={`Course ${course.title}`}\n                                    onError={(e) => { e.target.src = '/img/default.svg'; }}\n                                />\n                                <div className=\"course-info\">\n                                    <h3>{course.title}</h3>\n                                    <div className=\"tag\">Topics: {course.category}</div>\n                                    <div className=\"tag\">Price: {course.price}</div>\n                                    <div className=\"tag\">Schedule: {course.session}</div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className=\"price-summary-box\">\n                        {cartItems.map((course, index) => (\n                            <p key={index}>\n                                {course.title} : {course.price}\n                            </p>\n                        ))}\n\n                        <div className=\"total-box\">\n                            <span className=\"label\">Total price:</span>\n                            <span className=\"price\">{totalPrice.toLocaleString()} NOK</span>\n                        </div>\n\n                        <div className=\"checkout-box\">\n                            <button\n                                className=\"checkout-button\"\n                                onClick={handleCheckout}\n                                disabled={cartItems.length === 0}\n                            >\n                                Proceed to Checkout\n                            </button>\n                        </div>\n                    </div>\n                </>\n            )}\n\n            <CourseModal\n                course={selectedCourse}\n                onClose={() => setSelectedCourse(null)}\n            />\n\n            {showPopup && (\n                <CheckoutModal\n                    message=\"Thank you for your purchase! The courses have been added to your enrolled courses list in your profile.\"\n                    onClose={() => {\n                        setShowPopup(false);\n                        navigate('/profile');\n                    }}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default CartPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}